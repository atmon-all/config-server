// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0--rc2
// source: configserver.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Get flow configuration request.
type GetFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// configuration ID.
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetFlowRequest) Reset() {
	*x = GetFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowRequest) ProtoMessage() {}

func (x *GetFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowRequest.ProtoReflect.Descriptor instead.
func (*GetFlowRequest) Descriptor() ([]byte, []int) {
	return file_configserver_proto_rawDescGZIP(), []int{0}
}

func (x *GetFlowRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Get flow configuration response.
type GetFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Responsed code from config server.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Responsed message from config server.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Responsed flow configuration from config server.
	Flows []*FlowConfig `protobuf:"bytes,3,rep,name=flows,proto3" json:"flows,omitempty"`
}

func (x *GetFlowResponse) Reset() {
	*x = GetFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowResponse) ProtoMessage() {}

func (x *GetFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowResponse.ProtoReflect.Descriptor instead.
func (*GetFlowResponse) Descriptor() ([]byte, []int) {
	return file_configserver_proto_rawDescGZIP(), []int{1}
}

func (x *GetFlowResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFlowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetFlowResponse) GetFlows() []*FlowConfig {
	if x != nil {
		return x.Flows
	}
	return nil
}

// Flow configuration.
type FlowConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Flow ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Flow name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Flow description.
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// Flow status.
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Flow requset.
	Request string `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	// Flow response.
	Response string `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
	// Flow nodes.
	Nodes []*FlowNode `protobuf:"bytes,7,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *FlowConfig) Reset() {
	*x = FlowConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowConfig) ProtoMessage() {}

func (x *FlowConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowConfig.ProtoReflect.Descriptor instead.
func (*FlowConfig) Descriptor() ([]byte, []int) {
	return file_configserver_proto_rawDescGZIP(), []int{2}
}

func (x *FlowConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlowConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FlowConfig) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FlowConfig) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *FlowConfig) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *FlowConfig) GetNodes() []*FlowNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Flow node Configuration.
type FlowNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Flow node ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Flow node name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Flow node description.
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// Flow node server type, values are 'Golang','Java' or 'NodeJS'.
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Flow context define.
	Context string `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *FlowNode) Reset() {
	*x = FlowNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowNode) ProtoMessage() {}

func (x *FlowNode) ProtoReflect() protoreflect.Message {
	mi := &file_configserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowNode.ProtoReflect.Descriptor instead.
func (*FlowNode) Descriptor() ([]byte, []int) {
	return file_configserver_proto_rawDescGZIP(), []int{3}
}

func (x *FlowNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlowNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowNode) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FlowNode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FlowNode) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

var File_configserver_proto protoreflect.FileDescriptor

var file_configserver_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x22, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x6f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x46, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x08, 0x46, 0x6c,
	0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x32, 0x58, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x74,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x74, 0x6d, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configserver_proto_rawDescOnce sync.Once
	file_configserver_proto_rawDescData = file_configserver_proto_rawDesc
)

func file_configserver_proto_rawDescGZIP() []byte {
	file_configserver_proto_rawDescOnce.Do(func() {
		file_configserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_configserver_proto_rawDescData)
	})
	return file_configserver_proto_rawDescData
}

var file_configserver_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_configserver_proto_goTypes = []interface{}{
	(*GetFlowRequest)(nil),  // 0: configserver.GetFlowRequest
	(*GetFlowResponse)(nil), // 1: configserver.GetFlowResponse
	(*FlowConfig)(nil),      // 2: configserver.FlowConfig
	(*FlowNode)(nil),        // 3: configserver.FlowNode
}
var file_configserver_proto_depIdxs = []int32{
	2, // 0: configserver.GetFlowResponse.flows:type_name -> configserver.FlowConfig
	3, // 1: configserver.FlowConfig.nodes:type_name -> configserver.FlowNode
	0, // 2: configserver.ConfigServer.GetFlow:input_type -> configserver.GetFlowRequest
	1, // 3: configserver.ConfigServer.GetFlow:output_type -> configserver.GetFlowResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_configserver_proto_init() }
func file_configserver_proto_init() {
	if File_configserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configserver_proto_goTypes,
		DependencyIndexes: file_configserver_proto_depIdxs,
		MessageInfos:      file_configserver_proto_msgTypes,
	}.Build()
	File_configserver_proto = out.File
	file_configserver_proto_rawDesc = nil
	file_configserver_proto_goTypes = nil
	file_configserver_proto_depIdxs = nil
}
